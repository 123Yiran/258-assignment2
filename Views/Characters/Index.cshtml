@*@model IEnumerable<assignment2.Models.Character*@
@model assignment2.ViewModels.CharacterIndexViewModel
@using PagedList.Mvc
@{
    ViewBag.Title = "Characters";
}

<!DOCTYPE html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <meta name="description" content="An character introduction interface about Honkai: Star Rail">
    <link rel="stylesheet" href="https://jigsaw.w3.org/css-validator/validator">
    <link rel="stylesheet" href="https://jigsaw.w3.org/css-validator/validator">
    <meta name="keywords" content="Honkai: Star Rail, turn-based game, miHoYo">
    <link rel="stylesheet" href="~/root/css/characters-idex.css" />
</head>

<div class="showTable">
    <div class="page-header">
        <div class="page-main narrow-content">
            <h3>Character Encyclopedia</h3>
            <p>
                @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " +
        Model.Search + " found") @Model.Characters.TotalItemCount characters

        @using (Html.BeginForm("Index", "Characters", FormMethod.Get))
        {
            <label>Filter by destiny:</label>
            @*@Html.DropDownList("Destiny", "All")*@
            @Html.DropDownListFor(vm => vm.Destiny, Model.CatFilterItems, "All");
            <label>Sort By:</label>
            @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")
            <input type="submit" value="Filter" />
            @*<input type="hidden" name="Search" id="Search" value="@ViewBag.Search" />*@
            <input type="hidden" name="Search" id="Search" value="@Model.Search" />
        }
    </p>
    <table class="table">
        <tr>
            <th>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Characters.First().Name)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Destiny)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Characters.First().Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Characters.First().Faction)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Characters.First().Attribute)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Characters)
        {
            <tr>
                <td>
                    <img src="@Url.Content(item.ImagePath)" alt="Destiny Image" width="100" height="100">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Destiny.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Faction)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Attribute)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.ID })
                </td>
            </tr>
        }

    </table>
    <div class="page-container">
        <div class="page-info">
            Page @(Model.Characters.PageCount < Model.Characters.PageNumber ? 0 : Model.Characters.PageNumber) of @Model.Characters.PageCount
        </div>
        <div class="page-links">
            @for (int i = 1; i <= Model.Characters.PageCount; i++)
            {
                <div class="page-link">
                    @Html.ActionLink(i.ToString(), "Index", new
                    {
                        destiny = Model.Destiny,
                        Search = Model.Search,
                        sortBy = Model.SortBy,
                        page = i
                    })
                </div>
            }
        </div>
    </div>
</div>
</div>
</div>
